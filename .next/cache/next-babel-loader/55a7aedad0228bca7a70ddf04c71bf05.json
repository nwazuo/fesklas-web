{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { Avatar, Checkbox, Tag, Tooltip } from \"antd\";\nimport { taskTags } from \"../../../../routes/main/Dashboard/CRM/data\";\n\nconst getTags = tags => {\n  return taskTags.map((tag, index) => {\n    if (tags.includes(tag.id)) {\n      return __jsx(Tooltip, {\n        key: index,\n        title: tag.name\n      }, __jsx(\"li\", {\n        className: `gx-text-${tag.color}`\n      }, __jsx(\"i\", {\n        className: \"icon icon-circle gx-fs-xxs\"\n      })));\n    }\n\n    return null;\n  });\n};\n\nconst TaskItem = ({\n  data,\n  onChange\n}) => {\n  const {\n    title,\n    tags,\n    completed,\n    user,\n    dueDate\n  } = data;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"gx-media gx-task-list-item gx-flex-nowrap\"\n  }, __jsx(\"div\", {\n    className: \"gx-mr-3\"\n  }, __jsx(Checkbox, {\n    checked: completed,\n    onChange: () => onChange(data)\n  })), __jsx(\"div\", {\n    className: \"gx-media-body gx-task-item-content\"\n  }, __jsx(\"div\", {\n    className: \"gx-task-item-content-left\"\n  }, __jsx(\"p\", {\n    className: `gx-text-truncate gx-mb-0 ${completed ? 'gx-text-strikethrough' : 'gx-text-hover'}`\n  }, title)), __jsx(\"div\", {\n    className: \"gx-task-item-content-right\"\n  }, __jsx(Avatar, {\n    className: \"gx-ml-sm-3 gx-size-30 gx-order-sm-3\",\n    src: user.avatar\n  }), __jsx(Tag, {\n    className: \"gx-bg-grey gx-text-grey gx-ml-3 gx-mr-0 gx-mb-0 gx-rounded-xxl gx-order-sm-2\"\n  }, user.projectName), __jsx(\"ul\", {\n    className: \"gx-dot-list gx-mb-0 gx-order-sm-1 gx-ml-2\"\n  }, getTags(tags)), __jsx(\"span\", {\n    className: \"gx-fs-sm gx-text-grey gx-ml-3 gx-task-date gx-order-sm-4\"\n  }, dueDate)))));\n};\n\nexport default TaskItem;","map":{"version":3,"sources":["/workspace/fesklas-web/app/components/dashboard/CRM/TaskItem.js"],"names":["React","Avatar","Checkbox","Tag","Tooltip","taskTags","getTags","tags","map","tag","index","includes","id","name","color","TaskItem","data","onChange","title","completed","user","dueDate","avatar","projectName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,GAA1B,EAA+BC,OAA/B,QAA6C,MAA7C;AAEA,SAAQC,QAAR,QAAuB,4CAAvB;;AAEA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,SAAOF,QAAQ,CAACG,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClC,QAAIH,IAAI,CAACI,QAAL,CAAcF,GAAG,CAACG,EAAlB,CAAJ,EAA2B;AACzB,aAAO,MAAC,OAAD;AAAS,QAAA,GAAG,EAAEF,KAAd;AAAqB,QAAA,KAAK,EAAED,GAAG,CAACI;AAAhC,SACL;AAAI,QAAA,SAAS,EAAG,WAAUJ,GAAG,CAACK,KAAM;AAApC,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,QADF,CADK,CAAP;AAKD;;AACD,WAAO,IAAP;AACD,GATM,CAAP;AAUD,CAXD;;AAaA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAsB;AAErC,QAAM;AAACC,IAAAA,KAAD;AAAQX,IAAAA,IAAR;AAAcY,IAAAA,SAAd;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA;AAA/B,MAA0CL,IAAhD;AACA,SACE,4BACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEG,SAAnB;AAA8B,IAAA,QAAQ,EAAE,MAAMF,QAAQ,CAACD,IAAD;AAAtD,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AACE,IAAA,SAAS,EAAG,4BAA2BG,SAAS,GAAG,uBAAH,GAA6B,eAAgB;AAD/F,KACmGD,KADnG,CADF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,qCAAlB;AAAwD,IAAA,GAAG,EAAEE,IAAI,CAACE;AAAlE,IADF,EAEE,MAAC,GAAD;AACE,IAAA,SAAS,EAAC;AADZ,KAC4FF,IAAI,CAACG,WADjG,CAFF,EAIE;AAAI,IAAA,SAAS,EAAC;AAAd,KACGjB,OAAO,CAACC,IAAD,CADV,CAJF,EAOE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA4Ec,OAA5E,CAPF,CALF,CAJF,CADF,CADF;AAwBD,CA3BD;;AA6BA,eAAeN,QAAf","sourcesContent":["import React from \"react\";\nimport {Avatar, Checkbox, Tag, Tooltip} from \"antd\";\n\nimport {taskTags} from \"../../../../routes/main/Dashboard/CRM/data\";\n\nconst getTags = (tags) => {\n  return taskTags.map((tag, index) => {\n    if (tags.includes(tag.id)) {\n      return <Tooltip key={index} title={tag.name}>\n        <li className={`gx-text-${tag.color}`}>\n          <i className=\"icon icon-circle gx-fs-xxs\"/>\n        </li>\n      </Tooltip>\n    }\n    return null;\n  });\n};\n\nconst TaskItem = ({data, onChange}) => {\n\n  const {title, tags, completed, user, dueDate} = data;\n  return (\n    <>\n      <div className=\"gx-media gx-task-list-item gx-flex-nowrap\">\n        <div className=\"gx-mr-3\">\n          <Checkbox checked={completed} onChange={() => onChange(data)}/>\n        </div>\n        <div className=\"gx-media-body gx-task-item-content\">\n          <div className=\"gx-task-item-content-left\">\n            <p\n              className={`gx-text-truncate gx-mb-0 ${completed ? 'gx-text-strikethrough' : 'gx-text-hover'}`}>{title}</p>\n          </div>\n          <div className=\"gx-task-item-content-right\">\n            <Avatar className=\"gx-ml-sm-3 gx-size-30 gx-order-sm-3\" src={user.avatar}/>\n            <Tag\n              className=\"gx-bg-grey gx-text-grey gx-ml-3 gx-mr-0 gx-mb-0 gx-rounded-xxl gx-order-sm-2\">{user.projectName}</Tag>\n            <ul className=\"gx-dot-list gx-mb-0 gx-order-sm-1 gx-ml-2\">\n              {getTags(tags)}\n            </ul>\n            <span className=\"gx-fs-sm gx-text-grey gx-ml-3 gx-task-date gx-order-sm-4\">{dueDate}</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}