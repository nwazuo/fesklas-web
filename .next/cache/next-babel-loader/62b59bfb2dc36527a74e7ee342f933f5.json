{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Tabs } from \"antd\";\nimport Widget from \"../../../components/Widget\";\nimport TaskItem from \"./TaskItem\";\nvar TabPane = Tabs.TabPane;\n\nvar TaskList = function TaskList(props) {\n  _s();\n\n  var _useState = useState(props.taskList),\n      taskList = _useState[0],\n      setTaskList = _useState[1];\n\n  var onChange = function onChange(data) {\n    setTaskList(taskList.map(function (task) {\n      if (task.id === data.id) {\n        task.completed = !data.completed;\n      }\n\n      return task;\n    }));\n  };\n\n  return __jsx(Widget, {\n    title: \"Task List\",\n    styleName: \"gx-card-tabs\",\n    extra: __jsx(\"i\", {\n      className: \"icon icon-search-new gx-pointer gx-fs-xxl gx-text-primary\"\n    })\n  }, __jsx(Tabs, {\n    defaultActiveKey: \"1\"\n  }, __jsx(TabPane, {\n    tab: \"All Task\",\n    key: \"1\"\n  }, taskList.map(function (task, index) {\n    return __jsx(TaskItem, {\n      key: index,\n      data: task,\n      onChange: onChange\n    });\n  })), __jsx(TabPane, {\n    tab: \"My Task\",\n    key: \"2\"\n  }, taskList.map(function (task, index) {\n    return __jsx(TaskItem, {\n      key: \"2\" + index,\n      data: task,\n      onChange: onChange\n    });\n  }))));\n};\n\n_s(TaskList, \"VM54YJ8uQR59BzbJ/PZonOMYhyo=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/workspace/fesklas-web/app/components/dashboard/CRM/TaskList.js"],"names":["React","useState","Tabs","Widget","TaskItem","TabPane","TaskList","props","taskList","setTaskList","onChange","data","map","task","id","completed","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,OAAO,GAAGH,IAAI,CAACG,OAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAE1B,kBAAgCN,QAAQ,CAACM,KAAK,CAACC,QAAP,CAAxC;AAAA,MAAOA,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzBF,IAAAA,WAAW,CACTD,QAAQ,CAACI,GAAT,CAAa,UAAAC,IAAI,EAAI;AACnB,UAAIA,IAAI,CAACC,EAAL,KAAYH,IAAI,CAACG,EAArB,EAAyB;AACvBD,QAAAA,IAAI,CAACE,SAAL,GAAiB,CAACJ,IAAI,CAACI,SAAvB;AACD;;AACD,aAAOF,IAAP;AACD,KALD,CADS,CAAX;AAQD,GATD;;AAWA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,SAAS,EAAC,cAApC;AACQ,IAAA,KAAK,EAAE;AAAG,MAAA,SAAS,EAAC;AAAb;AADf,KAEE,MAAC,IAAD;AAAM,IAAA,gBAAgB,EAAC;AAAvB,KACE,MAAC,OAAD;AAAS,IAAA,GAAG,EAAC,UAAb;AAAwB,IAAA,GAAG,EAAC;AAA5B,KACGL,QAAQ,CAACI,GAAT,CAAa,UAACC,IAAD,EAAOG,KAAP;AAAA,WACZ,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,IAAI,EAAEH,IAA5B;AAAkC,MAAA,QAAQ,EAAEH;AAA5C,MADY;AAAA,GAAb,CADH,CADF,EAME,MAAC,OAAD;AAAS,IAAA,GAAG,EAAC,SAAb;AAAuB,IAAA,GAAG,EAAC;AAA3B,KACEF,QAAQ,CAACI,GAAT,CAAa,UAACC,IAAD,EAAOG,KAAP;AAAA,WACX,MAAC,QAAD;AAAU,MAAA,GAAG,EAAE,MAAMA,KAArB;AAA4B,MAAA,IAAI,EAAEH,IAAlC;AAAwC,MAAA,QAAQ,EAAEH;AAAlD,MADW;AAAA,GAAb,CADF,CANF,CAFF,CADF;AAgBD,CAhCD;;GAAMJ,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Tabs} from \"antd\";\nimport Widget from \"../../../components/Widget\";\nimport TaskItem from \"./TaskItem\";\n\nconst TabPane = Tabs.TabPane;\n\nconst TaskList = (props) => {\n\n  const [taskList, setTaskList] = useState(props.taskList);\n\n\n  const onChange = (data) => {\n    setTaskList(\n      taskList.map(task => {\n        if (task.id === data.id) {\n          task.completed = !data.completed;\n        }\n        return task;\n      })\n    )\n  };\n\n  return (\n    <Widget title=\"Task List\" styleName=\"gx-card-tabs\"\n            extra={<i className=\"icon icon-search-new gx-pointer gx-fs-xxl gx-text-primary\"/>}>\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"All Task\" key=\"1\">\n          {taskList.map((task, index) =>\n            <TaskItem key={index} data={task} onChange={onChange}/>)\n          }\n        </TabPane>\n        <TabPane tab=\"My Task\" key=\"2\">{\n          taskList.map((task, index) =>\n            <TaskItem key={\"2\" + index} data={task} onChange={onChange}/>)\n        }</TabPane>\n      </Tabs>\n    </Widget>\n  );\n};\n\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}