{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Avatar, Timeline } from \"antd\";\nimport WidgetHeader from \"../../../components/WidgetHeader/index\";\nimport ActivityItem from \"./ActivityItem\";\nvar TimeLineItem = Timeline.Item;\n\nfunction getName(task, shape) {\n  if (task.avatar === '') {\n    var nameSplit = task.name.split(\" \");\n\n    if (task.name.split(\" \").length === 1) {\n      var initials = nameSplit[0].charAt(0).toUpperCase();\n      return __jsx(Avatar, {\n        shape: shape,\n        className: \"gx-size-40 gx-bg-primary\"\n      }, initials);\n    } else {\n      var _initials = nameSplit[0].charAt(0).toUpperCase() + nameSplit[1].charAt(0).toUpperCase();\n\n      return __jsx(Avatar, {\n        shape: shape,\n        className: \"gx-size-40 gx-bg-cyan\"\n      }, _initials);\n    }\n  } else {\n    return __jsx(Avatar, {\n      shape: shape,\n      className: \"gx-size-40\",\n      src: task.avatar\n    });\n  }\n}\n\nvar RecentActivity = function RecentActivity(props) {\n  _s();\n\n  var _useState = useState(3),\n      limit = _useState[0],\n      setLimit = _useState[1];\n\n  var _useState2 = useState(props.shape),\n      shape = _useState2[0],\n      setShape = _useState2[1];\n\n  useEffect(function () {\n    setShape(props.shape);\n\n    if (window.innerWidth < 575) {\n      setLimit(1);\n    }\n  }, [props.shape]);\n\n  var onLoadMore = function onLoadMore() {\n    setLimit(limit + 1);\n  };\n\n  return __jsx(\"div\", {\n    className: \"gx-entry-sec\"\n  }, __jsx(WidgetHeader, {\n    title: \"Recent Activities\"\n  }), props.recentList.slice(0, limit).map(function (activity, index) {\n    return __jsx(\"div\", {\n      className: \"gx-timeline-info\",\n      key: \"activity\" + index\n    }, __jsx(\"h4\", {\n      className: \"gx-timeline-info-day\"\n    }, activity.day), __jsx(Timeline, null, activity.tasks.map(function (task, index) {\n      return __jsx(TimeLineItem, {\n        key: \"timeline\" + index,\n        mode: \"alternate\",\n        dot: getName(task, shape)\n      }, __jsx(ActivityItem, {\n        task: task\n      }));\n    })));\n  }), __jsx(\"span\", {\n    className: \"gx-link gx-btn-link\",\n    onClick: onLoadMore\n  }, \"Load More\"));\n};\n\n_s(RecentActivity, \"wTAXbKfyl5cBvCs2OdlnDZ32j/Y=\");\n\n_c = RecentActivity;\nexport default RecentActivity;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentActivity\");","map":{"version":3,"sources":["/workspace/fesklas-web/app/components/dashboard/CRM/RecentActivity.js"],"names":["React","useState","useEffect","Avatar","Timeline","WidgetHeader","ActivityItem","TimeLineItem","Item","getName","task","shape","avatar","nameSplit","name","split","length","initials","charAt","toUpperCase","RecentActivity","props","limit","setLimit","setShape","window","innerWidth","onLoadMore","recentList","slice","map","activity","index","day","tasks"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport {Avatar, Timeline} from \"antd\";\nimport WidgetHeader from \"../../../components/WidgetHeader/index\";\nimport ActivityItem from \"./ActivityItem\";\n\nconst TimeLineItem = Timeline.Item;\n\nfunction getName(task, shape) {\n  if (task.avatar === '') {\n    let nameSplit = task.name.split(\" \");\n    if (task.name.split(\" \").length === 1) {\n      const initials = nameSplit[0].charAt(0).toUpperCase();\n      return <Avatar shape={shape} className=\"gx-size-40 gx-bg-primary\">{initials}</Avatar>\n    } else {\n      const initials = nameSplit[0].charAt(0).toUpperCase() + nameSplit[1].charAt(0).toUpperCase();\n      return <Avatar shape={shape} className=\"gx-size-40 gx-bg-cyan\">{initials}</Avatar>\n    }\n  } else {\n    return <Avatar shape={shape} className=\"gx-size-40\" src={task.avatar}/>;\n  }\n}\n\nconst RecentActivity =(props)=> {\n\n  const [limit, setLimit] = useState(3);\n  const [shape, setShape] = useState(props.shape);\n\n  useEffect(() => {\n    setShape(props.shape);\n    if (window.innerWidth < 575) {\n      setLimit(1)\n    }\n  }, [props.shape]);\n\n\n  const onLoadMore =()=> {\n    setLimit(limit+1)\n  };\n\n    return (\n      <div className=\"gx-entry-sec\">\n        <WidgetHeader title=\"Recent Activities\"/>\n        {props.recentList.slice(0, limit).map((activity, index) =>\n          <div className=\"gx-timeline-info\" key={\"activity\" + index}>\n            <h4 className=\"gx-timeline-info-day\">{activity.day}</h4>\n            <Timeline>\n              {activity.tasks.map((task, index) => {\n\n                return <TimeLineItem key={\"timeline\" + index} mode=\"alternate\" dot={\n                  getName(task, shape)\n                }>\n                  <ActivityItem task={task}/>\n                </TimeLineItem>\n              })}\n            </Timeline>\n          </div>)}\n        <span className=\"gx-link gx-btn-link\" onClick={onLoadMore}>Load More</span>\n      </div>\n    );\n};\n\nexport default RecentActivity;\n"]},"metadata":{},"sourceType":"module"}